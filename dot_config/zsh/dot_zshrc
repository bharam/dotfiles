# PATH
export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/opt/X11/bin
export PATH=/Library/TeX/texbin:$PATH # texlive & mactex
export PATH=~/.config/bin:$PATH # custom binaries
export PATH=/opt/homebrew/bin:/opt/homebrew/sbin:$PATH # should be last line

# Environment Variables
export CONFIG="$HOME/.config"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"
export ZSH="$CONFIG/oh-my-zsh"
export ZDOTDIR="$CONFIG/zsh"
export WORKSPACE="$HOME/Workspace"
export DEV="$WORKSPACE/Development"

# Configurations
export ASDF_CONFIG_FILE="$CONFIG/runcom/asdfrc"
export ASDF_DATA_DIR="$XDG_DATA_HOME/asdf"
export ASDF_DIR="$XDG_DATA_HOME/asdf"
export CHEAT_CONFIG_PATH="$CONFIG/cheat/conf.yml"
export CHEAT_USE_FZF=true
export CHEZMOI_SOURCE="$XDG_DATA_HOME/chezmoi"
export CHTSH_HOME="$CONFIG/cht.sh"
export LESS="-R --lesskey-src=$CONFIG/runcom/lesskey"
export NPM_CONFIG_USERCONFIG="$CONFIG/runcom/npmrc"
export PAGER=less
export PSQLRC="$CONFIG/runcom/psqlrc"
export PSQL_HISTORY="$XDG_DATA_HOME/psql_history"
export PYLINTRC="$CONFIG/runcom/pylintrc"
export PYTHONSTARTUP="$CONFIG/python/pythonrc"
export REDISCLI_RCFILE="$CONFIG/runcom/redisclirc"
export REDISCLI_HISTFILE="$XDG_DATA_HOME/rediscli_history"
export RIPGREP_CONFIG_PATH="$CONFIG/rg/ripgreprc"
export STARSHIP_CONFIG="$CONFIG/runcom/starship.toml"
export _ZO_DATA_DIR="$XDG_DATA_HOME/zoxide"
export GITLINT_CONFIG="$XDG_CONFIG_HOME/runcom/gitlintrc"


###############################################################################
############## ZSH CONFIG #####################################################
###############################################################################
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#   source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
# fi

# ZSH theme
# ZSH_THEME="powerlevel10k/powerlevel10k"

# Path to completion cache file.
ZSH_CACHE_DIR="$ZSH/cache"
ZSH_COMPDUMP="$ZSH_CACHE_DIR/.zcompdump"

# Disable auto-setting terminal title. Required by tmuxinator.
DISABLE_AUTO_TITLE="true"

# Enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line if pasting URLs and other text is messed up.
DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
HIST_STAMPS="mm.dd.yyyy"

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  copypath
  copyfile
  jsontools
  history
  zsh-autosuggestions
  zsh-completions
  zsh-syntax-highlighting
  zsh-vim-mode
)

# homebrew's completion. !important: need to be sourced before omz
FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
source $ZSH/oh-my-zsh.sh


###############################################################################
############## GENERAL CONFIG #################################################
###############################################################################

eval "$(zoxide init zsh)"
eval $(thefuck --alias)
eval "$(starship init zsh)"

# TODO: test out starship (https://starship.rs)
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export VISUAL='nvim'
  export EDITOR='nvim'
else
  export VISUAL='nvim'
  export EDITOR='nvim'
fi

###############################################################################
############## ZSH Plugin Config ##############################################
###############################################################################
# zsh-vim-mode {{
bindkey -v
bindkey -rpM viins '^[^['   # <Esc><Esc> will switch to NORMAL mode instantly.
bindkey 'kh' vi-cmd-mode    # `kh` will swtich to NORMAL mode instantly.
bindkey -M   vicmd  k    vi-down-line-or-history
bindkey -M   vicmd  h    vi-up-line-or-history
bindkey -M   vicmd  j    vi-backward-char
bindkey -M   vicmd  l    vi-forward-char
bindkey -M   visual k    vi-down-line-or-history
bindkey -M   visual h    vi-up-line-or-history
bindkey -M   visual j    vi-backward-char
bindkey -M   visual l    vi-forward-char
MODE_CURSOR_VIINS="#d8dee8 blinking bar"
MODE_CURSOR_REPLACE="$MODE_CURSOR_VIINS underline"
MODE_CURSOR_VICMD="#d8dee8 steady block"
MODE_CURSOR_VISUAL="$MODE_CURSOR_VICMD steady bar"


###############################################################################
############## Packages #######################################################
###############################################################################
# fzf
# export FZF_DEFAULT_COMMAND="$CONFIG/rg"

# ripgrep
# alias rg="RIPGREP_CONFIG_PATH=$RIPGREP_CONFIG_PATH rg"


###############################################################################
############## Alias ##########################################################
###############################################################################

#### General #################
alias c=clear           # clear screen
alias f=open            # open in MacOS finder
alias dirs='dirs -v'    # disp stack w/ index
alias jobs='jobs -l'    # list jobs with process id
alias mkdir='mkdir -pv' # mkdir: create parent directories
alias rm='rm -v'        # rm verbosely

#### Alternatives ############
alias find=fd
alias grep=rg
alias top=bot
alias cat=bat
alias du=dust
alias cd=z
# alias ssh=mosh
alias ls='exa --group-directories-first'
alias lt='exa -TL 2'
alias ltd='exa -TaD'
alias lta='exa -TaL 2'
alias la='exa -lhga --git --time-style long-iso --group-directories-first'
alias ll='exa -lhg --git --time-style long-iso --group-directories-first'


#### edit config files #######
alias confzsh="nvim $CHEZMOI_SOURCE/dot_config/zsh/dot_zshrc"
alias confnvim="cd $CHEZMOI_SOURCE/dot_config/nvim && chezmoi edit $CONFIG/nvim"
# alias confnvim="cd $CONFIG/nvim && nvim"
alias confqmk="chezmoi edit $CONFIG/qmk_firmware"
# alias confp10k='nvim ~/.p10k.zsh'

# alias tw='timew'    # timewarrior
# alias tasksync='~/.task/todoist-taskwarrior/venv/bin/titwsync sync' # taskwarrior

#### Git #####################
alias ga='git add'
alias gbr='git branch'
alias gcm='git commit'
alias gcma='git commit --amend'
alias gcman='git commit --amend --no-edit'
alias goops='git commit --amend --no-edit'
alias gco='git checkout'
alias gdf='git diff'
alias glast='git log -5'
alias glog='git log --graph --oneline --decorate'
alias gre='git restore'
alias gst='git status'

#### Python ##################
alias python3=python3.11
alias python=python3.11
alias py=python3.11
alias pip3=pip3.11
alias pip=pip3.11
alias per='pipenv run'
alias pern='pipenv run nvim'
alias pers='pipenv run ./manage.py runserver 0.0.0.0:8000'
alias persh='pipenv run ./manage.py shell'

#### Docker ###################
alias doco='docker-compose'
alias doma='docker-machine'

#### Neovim ###################
alias v=nvim
alias vi=nvim
alias vim=nvim
alias view='nvim -R'
alias vimdiff='nvim -d'
alias diff='nvim -d'

#### Tmux #####################
alias mux=tmuxinator
alias ws='tmuxinator start workspace'
alias dev='tmuxinator start dev'

#### Personal #################
if [ -f "$ZDOTDIR/private.zshrc" ]; then
  source $ZDOTDIR/private.zshrc
fi


###############################################################################
############## Functions ######################################################
###############################################################################

# colors, a lot of colors!
function clicolors() {
    i=1
    for color in {000..255}; do;
        c=$c"$FG[$color]$colorâœ”$reset_color  ";
        if [ `expr $i % 8` -eq 0 ]; then
            c=$c"\n"
        fi
        i=`expr $i + 1`
    done;
    echo $c | sed 's/%//g' | sed 's/{//g' | sed 's/}//g' | sed '$s/..$//';
    c=''
}

# always show ls when chpwd
function chpwd() {
    emulate -L zsh
    ls
}

# display list of files upon cd (zoxide)
function z () {
        __zoxide_z "$@"
        exa --group-directories-first
}



###############################################################################
############## Experimental ###################################################
###############################################################################

# # test function
# function _test00() {
#   echo $1
#   echo $2
# }
#
# local _test_var0=69420
# _test_var1='This variable can be refereneced from shell as $_test_var1'
# _test_var2="_test_var0 is $_test_var0"
#
# function _test01() {
#   echo _test_var0
#   echo "$_test_var0"
#   echo _test_var1
#   echo "$_test_var1"
#   echo _test_var2
#   echo "$_test_var2"
# }
